:- dynamic parserVersionNum/1, parserVersionStr/1, parseResult/5.
:- dynamic module/4.
'parserVersionStr'('0.6.0.1').
'parseResult'('ok','',0,0,0).
:- dynamic channel/2, bindval/3, agent/3.
:- dynamic agent_curry/3, symbol/4.
:- dynamic dataTypeDef/2, subTypeDef/2, nameType/2.
:- dynamic cspTransparent/1.
:- dynamic cspPrint/1.
:- dynamic pragma/1.
:- dynamic comment/2.
:- dynamic assertBool/1, assertRef/5, assertTauPrio/6.
:- dynamic assertModelCheckExt/4, assertModelCheck/3.
'parserVersionNum'([0,10,0,1]).
'parserVersionStr'('CSPM-Frontent-0.10.0.1').
'bindval'('N','int'(4),'src_span'(11,1,11,4,260,3)).
'bindval'('T1','int'(1),'src_span'(13,1,13,7,265,6)).
'bindval'('T2','int'(3),'src_span'(14,1,14,7,272,6)).
'bindval'('TS','int'(7),'src_span'(15,1,15,7,279,6)).
'bindval'('Proc1','setExp'('rangeClosed'('int'(0),'-'('val_of'('N','src_span'(17,13,17,14,299,1)),'int'(1)))),'src_span'(17,1,17,17,287,16)).
'agent'('above'(_n),'setExp'('rangeEnum'([_k]),['comprehensionGenerator'(_k,'val_of'('Proc1','src_span'(22,22,22,27,457,5))),'comprehensionGuard'('>'(_k,_n))]),'src_span'(22,12,22,33,447,21)).
'agent'('below'(_n2),'setExp'('rangeEnum'([_k2]),['comprehensionGenerator'(_k2,'val_of'('Proc1','src_span'(23,22,23,27,490,5))),'comprehensionGuard'('<'(_k2,_n2))]),'src_span'(23,12,23,33,480,21)).
'channel'('election','type'('dotTupleType'(['val_of'('Proc1','src_span'(27,18,27,23,568,5)),'val_of'('Proc1','src_span'(27,24,27,29,574,5))]))).
'channel'('answer','type'('dotTupleType'(['val_of'('Proc1','src_span'(29,16,29,21,596,5)),'val_of'('Proc1','src_span'(29,22,29,27,602,5))]))).
'channel'('coordinator','type'('dotTupleType'(['val_of'('Proc1','src_span'(31,21,31,26,629,5)),'val_of'('Proc1','src_span'(31,27,31,32,635,5))]))).
'channel'('fail','type'('dotTupleType'(['val_of'('Proc1','src_span'(33,22,33,27,663,5))]))).
'channel'('revive','type'('dotTupleType'(['val_of'('Proc1','src_span'(33,22,33,27,663,5))]))).
'channel'('test','type'('dotTupleType'(['val_of'('Proc1','src_span'(35,17,35,22,686,5)),'val_of'('Proc1','src_span'(35,23,35,28,692,5))]))).
'channel'('ok','type'('dotTupleType'(['val_of'('Proc1','src_span'(35,17,35,22,686,5)),'val_of'('Proc1','src_span'(35,23,35,28,692,5))]))).
'channel'('leader','type'('dotTupleType'(['val_of'('Proc1','src_span'(37,16,37,21,714,5)),'val_of'('Proc1','src_span'(37,22,37,27,720,5))]))).
'channel'('tock','type'('dotUnitType')).
'agent'('BeginElection'(_n3),'agent_call'('src_span'(44,20,44,33,868,13),'SendElections',['-'('val_of'('N','src_span'(44,34,44,35,882,1)),'int'(1)),_n3]),'src_span'(44,20,44,40,868,20)).
'agent'('SendElections'(_k3,_n4),'[]'('[]'('[]'('[]'('[]'('[]'('ifte'('<='(_k3,_n4),'agent_call'('src_span'(50,36,50,48,1111,12),'AwaitAnswers',['val_of'('T1','src_span'(50,49,50,51,1124,2)),_n4]),'prefix'('src_span'(51,27,51,39,1156,12),[],'dotTuple'(['election',_n4,_k3]),'agent_call'('src_span'(51,43,51,56,1172,13),'SendElections',['-'(_k3,'int'(1)),_n4]),'src_span'(51,40,51,42,1168,36)),'no_loc_info_available','no_loc_info_available','src_span'(50,55,51,26,1129,81)),'prefix'('src_span'(52,24,52,32,1217,8),['inGuard'(_k_quote,'agent_call'('src_span'(52,36,52,41,1229,5),'below',[_n4])),'out'(_n4)],'election','prefix'('src_span'(52,49,52,60,1242,11),[],'dotTuple'(['answer',_n4,_k_quote]),'agent_call'('src_span'(52,63,52,76,1256,13),'SendElections',[_k3,_n4]),'src_span'(52,61,52,62,1253,32)),'src_span'(52,47,52,48,1239,37)),'src_span_operator'('no_loc_info_available','src_span'(52,21,52,23,1214,2))),'prefix'('src_span'(53,24,53,30,1298,6),['inGuard'(_k4,'agent_call'('src_span'(53,33,53,38,1307,5),'above',[_n4])),'out'(_n4)],'answer','agent_call'('src_span'(53,47,53,63,1321,16),'AwaitCoordinator',['val_of'('T2','src_span'(53,64,53,66,1338,2)),_n4]),'src_span'(53,44,53,46,1317,28)),'src_span_operator'('no_loc_info_available','src_span'(53,21,53,23,1295,2))),'prefix'('src_span'(54,24,54,26,1367,2),['inGuard'(_k_quote2,'agent_call'('src_span'(54,30,54,35,1373,5),'above',[_n4])),'out'(_n4)],'ok','agent_call'('src_span'(54,44,54,57,1387,13),'SendElections',[_k3,_n4]),'src_span'(54,41,54,43,1383,24)),'src_span_operator'('no_loc_info_available','src_span'(54,21,54,23,1364,2))),'prefix'('src_span'(55,24,55,35,1429,11),['inGuard'(_k5,'agent_call'('src_span'(55,38,55,43,1443,5),'above',[_n4])),'out'(_n4)],'coordinator','agent_call'('src_span'(55,52,55,60,1457,8),'Running\x27\',[_n4,_k5]),'src_span'(55,49,55,51,1453,19)),'src_span_operator'('no_loc_info_available','src_span'(55,21,55,23,1426,2))),'prefix'('src_span'(56,10,56,16,1480,6),[],'dotTuple'(['fail',_n4]),'agent_call'('src_span'(56,20,56,26,1490,6),'Failed',[_n4]),'src_span'(56,17,56,19,1486,19)),'src_span_operator'('no_loc_info_available','src_span'(56,7,56,9,1477,2))),'prefix'('src_span'(57,24,57,28,1523,4),['inGuard'(_k_quote3,'agent_call'('src_span'(57,32,57,37,1531,5),'below',[_n4])),'out'(_n4)],'test','agent_call'('src_span'(57,48,57,61,1547,13),'SendElections',[_k3,_n4]),'src_span'(57,43,57,47,1541,26)),'src_span_operator'('no_loc_info_available','src_span'(57,21,57,23,1520,2))),'no_loc_info_available').
'agent'('AwaitAnswers'(_t,_n5),'ifte'('=='(_t,'int'(0)),'agent_call'('src_span'(62,34,62,51,1743,17),'BecomeCoordinator',[_n5]),'[]'('[]'('[]'('[]'('[]'('[]'('prefix'('src_span'(64,21,64,25,1817,4),[],'tock','agent_call'('src_span'(64,29,64,41,1825,12),'AwaitAnswers',['-'(_t,'int'(1)),_n5]),'src_span'(64,26,64,28,1821,27)),'prefix'('src_span'(65,21,65,27,1865,6),['inGuard'(_k6,'agent_call'('src_span'(65,30,65,35,1874,5),'above',[_n5])),'out'(_n5)],'answer','agent_call'('src_span'(65,44,65,60,1888,16),'AwaitCoordinator',['val_of'('T2','src_span'(65,61,65,63,1905,2)),_n5]),'src_span'(65,41,65,43,1884,28)),'src_span_operator'('no_loc_info_available','src_span'(65,18,65,20,1862,2))),'prefix'('src_span'(66,21,66,23,1931,2),['inGuard'(_k7,'agent_call'('src_span'(66,26,66,31,1936,5),'above',[_n5])),'out'(_n5)],'ok','agent_call'('src_span'(66,40,66,52,1950,12),'AwaitAnswers',[_t,_n5]),'src_span'(66,37,66,39,1946,23)),'src_span_operator'('no_loc_info_available','src_span'(66,18,66,20,1928,2))),'prefix'('src_span'(67,21,67,29,1988,8),['inGuard'(_k8,'agent_call'('src_span'(67,32,67,37,1999,5),'below',[_n5])),'out'(_n5)],'election','prefix'('src_span'(67,46,67,56,2013,10),[],'dotTuple'(['answer',_n5,_k8]),'agent_call'('src_span'(67,60,67,72,2027,12),'AwaitAnswers',[_t,_n5]),'src_span'(67,57,67,59,2023,31)),'src_span'(67,43,67,45,2009,37)),'src_span_operator'('no_loc_info_available','src_span'(67,18,67,20,1985,2))),'prefix'('src_span'(68,21,68,32,2065,11),['inGuard'(_k9,'agent_call'('src_span'(68,35,68,40,2079,5),'above',[_n5])),'out'(_n5)],'coordinator','agent_call'('src_span'(68,49,68,57,2093,8),'Running\x27\',[_n5,_k9]),'src_span'(68,46,68,48,2089,19)),'src_span_operator'('no_loc_info_available','src_span'(68,18,68,20,2062,2))),'prefix'('src_span'(69,10,69,16,2116,6),[],'dotTuple'(['fail',_n5]),'agent_call'('src_span'(69,20,69,26,2126,6),'Failed',[_n5]),'src_span'(69,17,69,19,2122,19)),'src_span_operator'('no_loc_info_available','src_span'(69,7,69,9,2113,2))),'prefix'('src_span'(70,24,70,28,2159,4),['inGuard'(_k73,'agent_call'('src_span'(70,31,70,36,2166,5),'below',[_n5])),'out'(_n5)],'test','agent_call'('src_span'(70,47,70,59,2182,12),'AwaitAnswers',[_t,_n5]),'src_span'(70,42,70,46,2176,25)),'src_span_operator'('no_loc_info_available','src_span'(70,21,70,23,2156,2))),'no_loc_info_available','no_loc_info_available','no_loc_info_available'),'src_span'(62,21,70,64,1730,469)).
'agent'('AwaitCoordinator'(_t2,_n6),'ifte'('=='(_t2,'int'(0)),'agent_call'('src_span'(77,38,77,51,2428,13),'BeginElection',[_n6]),'[]'('[]'('[]'('[]'('[]'('[]'('prefix'('src_span'(79,25,79,29,2506,4),[],'tock','agent_call'('src_span'(79,32,79,48,2513,16),'AwaitCoordinator',['-'(_t2,'int'(1)),_n6]),'src_span'(79,30,79,31,2510,30)),'prefix'('src_span'(80,25,80,36,2561,11),['inGuard'(_k76,'agent_call'('src_span'(80,39,80,44,2575,5),'above',[_n6])),'out'(_n6)],'coordinator','agent_call'('src_span'(80,53,80,61,2589,8),'Running\x27\',[_n6,_k76]),'src_span'(80,50,80,52,2585,19)),'src_span_operator'('no_loc_info_available','src_span'(80,21,80,23,2557,2))),'prefix'('src_span'(81,24,81,30,2626,6),['inGuard'(_k77,'agent_call'('src_span'(81,33,81,38,2635,5),'above',[_n6])),'out'(_n6)],'answer','agent_call'('src_span'(81,47,81,63,2649,16),'AwaitCoordinator',[_t2,_n6]),'src_span'(81,44,81,46,2645,27)),'src_span_operator'('no_loc_info_available','src_span'(81,21,81,23,2623,2))),'prefix'('src_span'(82,24,82,26,2694,2),['inGuard'(_k78,'agent_call'('src_span'(82,29,82,34,2699,5),'above',[_n6])),'out'(_n6)],'ok','agent_call'('src_span'(82,43,82,59,2713,16),'AwaitCoordinator',[_t2,_n6]),'src_span'(82,40,82,42,2709,27)),'src_span_operator'('no_loc_info_available','src_span'(82,21,82,23,2691,2))),'prefix'('src_span'(83,24,83,32,2758,8),['inGuard'(_k79,'agent_call'('src_span'(83,35,83,40,2769,5),'below',[_n6])),'out'(_n6)],'election','prefix'('src_span'(83,49,83,59,2783,10),[],'dotTuple'(['answer',_n6,_k79]),'agent_call'('src_span'(84,43,84,59,2840,16),'AwaitCoordinator',[_t2,_n6]),'src_span'(83,60,84,42,2793,78)),'src_span'(83,46,83,48,2779,84)),'src_span_operator'('no_loc_info_available','src_span'(83,21,83,23,2755,2))),'prefix'('src_span'(85,10,85,16,2871,6),[],'dotTuple'(['fail',_n6]),'agent_call'('src_span'(85,20,85,26,2881,6),'Failed',[_n6]),'src_span'(85,17,85,19,2877,19)),'src_span_operator'('no_loc_info_available','src_span'(85,7,85,9,2868,2))),'prefix'('src_span'(86,24,86,28,2914,4),['inGuard'(_k80,'agent_call'('src_span'(86,31,86,36,2921,5),'below',[_n6])),'out'(_n6)],'test','agent_call'('src_span'(86,47,86,63,2937,16),'AwaitCoordinator',[_t2,_n6]),'src_span'(86,42,86,46,2931,29)),'src_span_operator'('no_loc_info_available','src_span'(86,21,86,23,2911,2))),'no_loc_info_available','no_loc_info_available','no_loc_info_available'),'src_span'(77,25,86,68,2415,543)).
'agent'('BecomeCoordinator'(_n7),'agent_call'('src_span'(91,24,91,34,3100,10),'SendCoords',['-'(_n7,'int'(1)),_n7]),'src_span'(91,24,91,41,3100,17)).
'agent'('SendCoords'(_j,_n8),'ifte'('<'(_j,'int'(0)),'agent_call'('src_span'(97,31,97,41,3325,10),'RunAsCoord',[_n8]),'[]'('[]'('[]'('[]'('prefix'('src_span'(98,24,98,39,3362,15),[],'dotTuple'(['coordinator',_n8,_j]),'agent_call'('src_span'(98,43,98,53,3381,10),'SendCoords',['-'(_j,'int'(1)),_n8]),'src_span'(98,40,98,42,3377,36)),'prefix'('src_span'(99,22,99,30,3420,8),['inGuard'(_k84,'agent_call'('src_span'(99,33,99,38,3431,5),'below',[_n8])),'out'(_n8)],'election','prefix'('src_span'(99,47,99,62,3445,15),[],'dotTuple'(['coordinator',_n8,_k84]),'agent_call'('src_span'(99,66,99,76,3464,10),'SendCoords',[_j,_n8]),'src_span'(99,63,99,65,3460,34)),'src_span'(99,44,99,46,3441,40)),'src_span_operator'('no_loc_info_available','src_span'(99,19,99,21,3417,2))),'prefix'('src_span'(100,22,100,33,3501,11),['inGuard'(_k85,'agent_call'('src_span'(100,36,100,41,3515,5),'above',[_n8])),'out'(_n8)],'coordinator','agent_call'('src_span'(100,50,100,58,3529,8),'Running\x27\',[_n8,_k85]),'src_span'(100,47,100,49,3525,19)),'src_span_operator'('no_loc_info_available','src_span'(100,19,100,21,3498,2))),'prefix'('src_span'(101,22,101,28,3564,6),[],'dotTuple'(['fail',_n8]),'agent_call'('src_span'(101,32,101,38,3574,6),'Failed',[_n8]),'src_span'(101,29,101,31,3570,19)),'src_span_operator'('no_loc_info_available','src_span'(101,19,101,21,3561,2))),'prefix'('src_span'(102,22,102,26,3605,4),['inGuard'(_k86,'agent_call'('src_span'(102,29,102,34,3612,5),'below',[_n8])),'out'(_n8)],'test','prefix'('src_span'(102,44,102,50,3627,6),[],'dotTuple'(['ok',_n8,_k86]),'agent_call'('src_span'(102,54,102,64,3637,10),'SendCoords',[_j,_n8]),'src_span'(102,51,102,53,3633,25)),'src_span'(102,40,102,43,3622,32)),'src_span_operator'('no_loc_info_available','src_span'(102,19,102,21,3602,2))),'no_loc_info_available','no_loc_info_available','no_loc_info_available'),'src_span'(97,19,102,69,3313,339)).
'agent'('RunAsCoord'(_n9),'[]'('[]'('[]'('[]'('[]'('prefix'('src_span'(106,19,106,23,3728,4),[],'tock','agent_call'('src_span'(106,27,106,37,3736,10),'RunAsCoord',[_n9]),'src_span'(106,24,106,26,3732,21)),'prefix'('src_span'(107,22,107,26,3771,4),['inGuard'(_k88,'agent_call'('src_span'(107,29,107,34,3778,5),'below',[_n9])),'out'(_n9)],'test','prefix'('src_span'(107,43,107,49,3792,6),[],'dotTuple'(['ok',_n9,_k88]),'agent_call'('src_span'(107,53,107,63,3802,10),'RunAsCoord',[_n9]),'src_span'(107,50,107,52,3798,23)),'src_span'(107,40,107,42,3788,29)),'src_span_operator'('no_loc_info_available','src_span'(107,19,107,21,3768,2))),'prefix'('src_span'(108,22,108,33,3837,11),['inGuard'(_k89,'agent_call'('src_span'(108,36,108,41,3851,5),'above',[_n9])),'out'(_n9)],'coordinator','agent_call'('src_span'(108,50,108,58,3865,8),'Running\x27\',[_n9,_k89]),'src_span'(108,47,108,49,3861,19)),'src_span_operator'('no_loc_info_available','src_span'(108,19,108,21,3834,2))),'prefix'('src_span'(109,22,109,30,3900,8),['inGuard'(_k90,'agent_call'('src_span'(109,33,109,38,3911,5),'below',[_n9])),'out'(_n9)],'election','prefix'('src_span'(109,47,109,57,3925,10),[],'dotTuple'(['answer',_n9,_k90]),'agent_call'('src_span'(109,61,109,74,3939,13),'BeginElection',[_n9]),'src_span'(109,58,109,60,3935,30)),'src_span'(109,44,109,46,3921,36)),'src_span_operator'('no_loc_info_available','src_span'(109,19,109,21,3897,2))),'prefix'('src_span'(110,22,110,28,3977,6),[],'dotTuple'(['fail',_n9]),'agent_call'('src_span'(110,32,110,38,3987,6),'Failed',[_n9]),'src_span'(110,29,110,31,3983,19)),'src_span_operator'('no_loc_info_available','src_span'(110,19,110,21,3974,2))),'prefix'('src_span'(111,8,111,18,4004,10),[],'dotTuple'(['leader',_n9,_n9]),'agent_call'('src_span'(111,22,111,32,4018,10),'RunAsCoord',[_n9]),'src_span'(111,19,111,21,4014,27)),'src_span_operator'('no_loc_info_available','src_span'(111,5,111,7,4001,2))),'no_loc_info_available').
'agent'('Running'(_n91,_k92),'[]'('[]'('[]'('[]'('[]'('[]'('[]'('prefix'('src_span'(115,19,115,27,4101,8),[],'dotTuple'(['test',_n91,_k92]),'agent_call'('src_span'(115,31,115,38,4113,7),'Testing',[_n91,_k92]),'src_span'(115,28,115,30,4109,24)),'prefix'('src_span'(116,22,116,26,4147,4),[],'tock','agent_call'('src_span'(116,30,116,37,4155,7),'Running',[_n91,_k92]),'src_span'(116,27,116,29,4151,20)),'src_span_operator'('no_loc_info_available','src_span'(116,19,116,21,4144,2))),'prefix'('src_span'(117,22,117,33,4189,11),['inGuard'(_k93,'agent_call'('src_span'(117,36,117,41,4203,5),'above',[_n91])),'out'(_n91)],'coordinator','agent_call'('src_span'(117,50,117,58,4217,8),'Running\x27\',[_n91,_k93]),'src_span'(117,47,117,49,4213,19)),'src_span_operator'('no_loc_info_available','src_span'(117,19,117,21,4186,2))),'prefix'('src_span'(118,22,118,28,4252,6),['inGuard'(_j2,'agent_call'('src_span'(118,31,118,36,4261,5),'above',[_n91])),'out'(_n91)],'answer','agent_call'('src_span'(118,46,118,53,4276,7),'Running',[_n91,_k92]),'src_span'(118,42,118,45,4271,19)),'src_span_operator'('no_loc_info_available','src_span'(118,19,118,21,4249,2))),'prefix'('src_span'(119,8,119,18,4296,10),[],'dotTuple'(['leader',_n91,_k92]),'agent_call'('src_span'(119,22,119,29,4310,7),'Running',[_n91,_k92]),'src_span'(119,19,119,21,4306,26)),'src_span_operator'('no_loc_info_available','src_span'(119,5,119,7,4293,2))),'prefix'('src_span'(120,22,120,30,4344,8),['inGuard'(_k95,'agent_call'('src_span'(120,33,120,38,4355,5),'below',[_n91])),'out'(_n91)],'election','prefix'('src_span'(120,47,120,57,4369,10),[],'dotTuple'(['answer',_n91,_k95]),'agent_call'('src_span'(120,61,120,74,4383,13),'BeginElection',[_n91]),'src_span'(120,58,120,60,4379,30)),'src_span'(120,44,120,46,4365,36)),'src_span_operator'('no_loc_info_available','src_span'(120,19,120,21,4341,2))),'prefix'('src_span'(121,22,121,26,4421,4),['inGuard'(_j3,'agent_call'('src_span'(121,29,121,34,4428,5),'below',[_n91])),'out'(_n91)],'test','agent_call'('src_span'(121,44,121,51,4443,7),'Running',[_n91,_k92]),'src_span'(121,40,121,43,4438,19)),'src_span_operator'('no_loc_info_available','src_span'(121,19,121,21,4418,2))),'prefix'('src_span'(122,22,122,28,4477,6),[],'dotTuple'(['fail',_n91]),'agent_call'('src_span'(122,32,122,38,4487,6),'Failed',[_n91]),'src_span'(122,29,122,31,4483,19)),'src_span_operator'('no_loc_info_available','src_span'(122,19,122,21,4474,2))),'no_loc_info_available').
'agent'('Testing'(_n97,_k98),'[]'('[]'('[]'('[]'('[]'('[]'('[]'('prefix'('src_span'(128,22,128,28,4698,6),[],'dotTuple'(['ok',_k98,_n97]),'agent_call'('src_span'(128,32,128,40,4708,8),'Running\x27\',[_n97,_k98]),'src_span'(128,29,128,31,4704,23)),'prefix'('src_span'(129,22,129,26,4743,4),[],'tock','agent_call'('src_span'(129,30,129,43,4751,13),'BeginElection',[_n97]),'src_span'(129,27,129,29,4747,24)),'src_span_operator'('no_loc_info_available','src_span'(129,19,129,21,4740,2))),'prefix'('src_span'(130,22,130,28,4789,6),['inGuard'(_j4,'agent_call'('src_span'(130,31,130,36,4798,5),'above',[_n97])),'out'(_n97)],'answer','agent_call'('src_span'(130,46,130,53,4813,7),'Testing',[_n97,_k98]),'src_span'(130,42,130,45,4808,19)),'src_span_operator'('no_loc_info_available','src_span'(130,19,130,21,4786,2))),'prefix'('src_span'(131,22,131,33,4847,11),['inGuard'(_k100,'agent_call'('src_span'(131,36,131,41,4861,5),'above',[_n97])),'out'(_n97)],'coordinator','agent_call'('src_span'(131,50,131,58,4875,8),'Running\x27\',[_n97,_k100]),'src_span'(131,47,131,49,4871,19)),'src_span_operator'('no_loc_info_available','src_span'(131,19,131,21,4844,2))),'prefix'('src_span'(132,22,132,30,4910,8),['inGuard'(_k101,'agent_call'('src_span'(132,33,132,38,4921,5),'below',[_n97])),'out'(_n97)],'election','prefix'('src_span'(132,47,132,57,4935,10),[],'dotTuple'(['answer',_n97,_k101]),'agent_call'('src_span'(132,61,132,74,4949,13),'BeginElection',[_n97]),'src_span'(132,58,132,60,4945,30)),'src_span'(132,44,132,46,4931,36)),'src_span_operator'('no_loc_info_available','src_span'(132,19,132,21,4907,2))),'prefix'('src_span'(133,22,133,28,4987,6),[],'dotTuple'(['fail',_n97]),'agent_call'('src_span'(133,32,133,38,4997,6),'Failed',[_n97]),'src_span'(133,29,133,31,4993,19)),'src_span_operator'('no_loc_info_available','src_span'(133,19,133,21,4984,2))),'prefix'('src_span'(134,22,134,26,5028,4),['inGuard'(_j5,'agent_call'('src_span'(134,29,134,34,5035,5),'below',[_n97])),'out'(_n97)],'test','agent_call'('src_span'(134,44,134,51,5050,7),'Testing',[_n97,_k98]),'src_span'(134,40,134,43,5045,19)),'src_span_operator'('no_loc_info_available','src_span'(134,19,134,21,5025,2))),'prefix'('src_span'(135,8,135,18,5070,10),[],'dotTuple'(['leader',_n97,_k98]),'agent_call'('src_span'(135,22,135,29,5084,7),'Testing',[_n97,_k98]),'src_span'(135,19,135,21,5080,26)),'src_span_operator'('no_loc_info_available','src_span'(135,5,135,7,5067,2))),'no_loc_info_available').
'agent'('Running\x27\'(_n103,_k104),'[]'('[]'('[]'('[]'('[]'('[]'('[]'('prefix'('src_span'(141,19,141,23,5307,4),[],'tock','agent_call'('src_span'(141,27,141,34,5315,7),'Running',[_n103,_k104]),'src_span'(141,24,141,26,5311,20)),'prefix'('src_span'(142,22,142,33,5349,11),['inGuard'(_k105,'agent_call'('src_span'(142,36,142,41,5363,5),'above',[_n103])),'out'(_n103)],'coordinator','agent_call'('src_span'(142,50,142,58,5377,8),'Running\x27\',[_n103,_k105]),'src_span'(142,47,142,49,5373,19)),'src_span_operator'('no_loc_info_available','src_span'(142,19,142,21,5346,2))),'prefix'('src_span'(143,22,143,28,5412,6),['inGuard'(_j6,'agent_call'('src_span'(143,31,143,36,5421,5),'above',[_n103])),'out'(_n103)],'answer','agent_call'('src_span'(143,46,143,54,5436,8),'Running\x27\',[_n103,_k104]),'src_span'(143,42,143,45,5431,20)),'src_span_operator'('no_loc_info_available','src_span'(143,19,143,21,5409,2))),'prefix'('src_span'(144,22,144,30,5471,8),['inGuard'(_k107,'agent_call'('src_span'(144,33,144,38,5482,5),'below',[_n103])),'out'(_n103)],'election','prefix'('src_span'(144,47,144,57,5496,10),[],'dotTuple'(['answer',_n103,_k107]),'agent_call'('src_span'(144,61,144,74,5510,13),'BeginElection',[_n103]),'src_span'(144,58,144,60,5506,30)),'src_span'(144,44,144,46,5492,36)),'src_span_operator'('no_loc_info_available','src_span'(144,19,144,21,5468,2))),'prefix'('src_span'(145,22,145,28,5548,6),[],'dotTuple'(['fail',_n103]),'agent_call'('src_span'(145,32,145,38,5558,6),'Failed',[_n103]),'src_span'(145,29,145,31,5554,19)),'src_span_operator'('no_loc_info_available','src_span'(145,19,145,21,5545,2))),'prefix'('src_span'(146,8,146,18,5575,10),[],'dotTuple'(['leader',_n103,_k104]),'agent_call'('src_span'(146,22,146,30,5589,8),'Running\x27\',[_n103,_k104]),'src_span'(146,19,146,21,5585,27)),'src_span_operator'('no_loc_info_available','src_span'(146,5,146,7,5572,2))),'prefix'('src_span'(147,22,147,26,5624,4),['inGuard'(_j7,'agent_call'('src_span'(147,29,147,34,5631,5),'below',[_n103])),'out'(_n103)],'test','agent_call'('src_span'(147,44,147,52,5646,8),'Running\x27\',[_n103,_k104]),'src_span'(147,40,147,43,5641,20)),'src_span_operator'('no_loc_info_available','src_span'(147,19,147,21,5621,2))),'prefix'('src_span'(148,22,148,24,5681,2),['inGuard'(_j8,'agent_call'('src_span'(148,27,148,32,5686,5),'above',[_n103])),'out'(_n103)],'ok','agent_call'('src_span'(148,41,148,49,5700,8),'Running\x27\',[_n103,_k104]),'src_span'(148,38,148,40,5696,19)),'src_span_operator'('no_loc_info_available','src_span'(148,19,148,21,5678,2))),'no_loc_info_available').
'agent'('Failed'(_n110),'[]'('[]'('[]'('[]'('[]'('[]'('prefix'('src_span'(152,13,152,17,5777,4),[],'tock','agent_call'('src_span'(152,21,152,28,5785,7),'Failed\x27\',[_n110]),'src_span'(152,18,152,20,5781,18)),'prefix'('src_span'(153,16,153,27,5811,11),['inGuard'(_k111,'agent_call'('src_span'(153,30,153,35,5825,5),'above',[_n110])),'out'(_n110)],'coordinator','agent_call'('src_span'(153,44,153,50,5839,6),'Failed',[_n110]),'src_span'(153,41,153,43,5835,15)),'src_span_operator'('no_loc_info_available','src_span'(153,13,153,15,5808,2))),'prefix'('src_span'(154,16,154,24,5864,8),['inGuard'(_k112,'agent_call'('src_span'(154,27,154,32,5875,5),'below',[_n110])),'out'(_n110)],'election','agent_call'('src_span'(154,41,154,47,5889,6),'Failed',[_n110]),'src_span'(154,38,154,40,5885,15)),'src_span_operator'('no_loc_info_available','src_span'(154,13,154,15,5861,2))),'prefix'('src_span'(155,16,155,20,5914,4),['inGuard'(_k113,'agent_call'('src_span'(155,23,155,28,5921,5),'below',[_n110])),'out'(_n110)],'test','agent_call'('src_span'(155,38,155,44,5936,6),'Failed',[_n110]),'src_span'(155,34,155,37,5931,16)),'src_span_operator'('no_loc_info_available','src_span'(155,13,155,15,5911,2))),'prefix'('src_span'(156,16,156,18,5961,2),['inGuard'(_k114,'agent_call'('src_span'(156,21,156,26,5966,5),'above',[_n110])),'out'(_n110)],'ok','agent_call'('src_span'(156,36,156,42,5981,6),'Failed',[_n110]),'src_span'(156,32,156,35,5976,16)),'src_span_operator'('no_loc_info_available','src_span'(156,13,156,15,5958,2))),'prefix'('src_span'(157,16,157,22,6006,6),['inGuard'(_k115,'agent_call'('src_span'(157,25,157,30,6015,5),'above',[_n110])),'out'(_n110)],'answer','agent_call'('src_span'(157,40,157,46,6030,6),'Failed',[_n110]),'src_span'(157,36,157,39,6025,16)),'src_span_operator'('no_loc_info_available','src_span'(157,13,157,15,6003,2))),'prefix'('src_span'(158,16,158,22,6055,6),[],'dotTuple'(['fail',_n110]),'agent_call'('src_span'(158,26,158,32,6065,6),'Failed',[_n110]),'src_span'(158,23,158,25,6061,19)),'src_span_operator'('no_loc_info_available','src_span'(158,13,158,15,6052,2))),'no_loc_info_available').
'agent'('Failed\x27\'(_n116),'[]'('[]'('[]'('[]'('[]'('[]'('[]'('prefix'('src_span'(162,14,162,18,6144,4),[],'tock','agent_call'('src_span'(162,22,162,29,6152,7),'Failed\x27\',[_n116]),'src_span'(162,19,162,21,6148,18)),'prefix'('src_span'(163,16,163,27,6178,11),['inGuard'(_k117,'agent_call'('src_span'(163,30,163,35,6192,5),'above',[_n116])),'out'(_n116)],'coordinator','agent_call'('src_span'(163,44,163,51,6206,7),'Failed\x27\',[_n116]),'src_span'(163,41,163,43,6202,16)),'src_span_operator'('no_loc_info_available','src_span'(163,13,163,15,6175,2))),'prefix'('src_span'(164,16,164,24,6232,8),['inGuard'(_k118,'agent_call'('src_span'(164,27,164,32,6243,5),'below',[_n116])),'out'(_n116)],'election','agent_call'('src_span'(164,41,164,48,6257,7),'Failed\x27\',[_n116]),'src_span'(164,38,164,40,6253,16)),'src_span_operator'('no_loc_info_available','src_span'(164,13,164,15,6229,2))),'prefix'('src_span'(165,16,165,20,6283,4),['inGuard'(_k119,'agent_call'('src_span'(165,23,165,28,6290,5),'below',[_n116])),'out'(_n116)],'test','agent_call'('src_span'(165,38,165,45,6305,7),'Failed\x27\',[_n116]),'src_span'(165,34,165,37,6300,17)),'src_span_operator'('no_loc_info_available','src_span'(165,13,165,15,6280,2))),'prefix'('src_span'(166,16,166,18,6331,2),['inGuard'(_k120,'agent_call'('src_span'(166,21,166,26,6336,5),'above',[_n116])),'out'(_n116)],'ok','agent_call'('src_span'(166,36,166,43,6351,7),'Failed\x27\',[_n116]),'src_span'(166,32,166,35,6346,17)),'src_span_operator'('no_loc_info_available','src_span'(166,13,166,15,6328,2))),'prefix'('src_span'(167,16,167,22,6377,6),['inGuard'(_k121,'agent_call'('src_span'(167,25,167,30,6386,5),'above',[_n116])),'out'(_n116)],'answer','agent_call'('src_span'(167,40,167,47,6401,7),'Failed\x27\',[_n116]),'src_span'(167,36,167,39,6396,17)),'src_span_operator'('no_loc_info_available','src_span'(167,13,167,15,6374,2))),'prefix'('src_span'(168,16,168,22,6427,6),[],'dotTuple'(['fail',_n116]),'agent_call'('src_span'(168,26,168,32,6437,6),'Failed',[_n116]),'src_span'(168,23,168,25,6433,19)),'src_span_operator'('no_loc_info_available','src_span'(168,13,168,15,6424,2))),'prefix'('src_span'(169,16,169,24,6462,8),[],'dotTuple'(['revive',_n116]),'ifte'('=='(_n116,'-'('val_of'('N','src_span'(169,35,169,36,6481,1)),'int'(1))),'agent_call'('src_span'(169,44,169,61,6490,17),'BecomeCoordinator',[_n116]),'agent_call'('src_span'(170,37,170,50,6547,13),'BeginElection',[_n116]),'no_loc_info_available','no_loc_info_available','src_span'(169,65,170,36,6510,73)),'src_span'(169,25,169,27,6470,102)),'src_span_operator'('no_loc_info_available','src_span'(169,13,169,15,6459,2))),'no_loc_info_available').
'cspTransparent'(['normal']).
'agent'('Alpha'(_n122),'agent_call'('src_span'(178,12,178,17,6713,5),'union',['closure'(['tock','dotTuple'(['fail',_n122]),'dotTuple'(['revive',_n122]),'dotTuple'(['election',_n122]),'dotTuple'(['coordinator',_n122]),'dotTuple'(['test',_n122]),'dotTuple'(['answer',_n122]),'dotTuple'(['leader',_n122]),'dotTuple'(['ok',_n122])]),'setExp'('rangeEnum'(['dotTuple'(['election',_k123,_n122]),'dotTuple'(['coordinator',_k123,_n122]),'dotTuple'(['test',_k123,_n122]),'dotTuple'(['answer',_k123,_n122]),'dotTuple'(['ok',_k123,_n122])]),['comprehensionGenerator'(_k123,'val_of'('Proc1','src_span'(181,40,181,45,6903,5)))])]),'src_span'(178,12,181,47,6713,197)).
'agent'('Node'(_n124),'agent_call'('src_span'(183,11,183,17,6922,6),'normal',['ifte'('=='(_n124,'-'('val_of'('N','src_span'(183,24,183,25,6935,1)),'int'(1))),'agent_call'('src_span'(183,33,183,43,6944,10),'RunAsCoord',[_n124]),'agent_call'('src_span'(183,52,183,59,6963,7),'Running',[_n124,'-'('val_of'('N','src_span'(183,62,183,63,6973,1)),'int'(1))]),'no_loc_info_available','no_loc_info_available','src_span'(183,47,183,51,6957,33))]),'src_span'(183,11,183,67,6922,56)).
'bindval'('Network','procRepAParallel'(['comprehensionGenerator'(_n125,'val_of'('Proc1','src_span'(185,16,185,21,6995,5)))],'pair'('agent_call'('src_span'(185,25,185,30,7004,5),'Alpha',[_n125]),'agent_call'('src_span'(185,35,185,39,7014,4),'Node',[_n125])),'src_span'(185,14,185,23,6993,9)),'src_span'(185,1,185,42,6980,41)).
'bindval'('Delayable','closure'(['fail','revive','leader','test']),'src_span'(193,1,193,43,7345,42)).
'bindval'('Urgent','agent_call'('src_span'(194,10,194,14,7397,4),'diff',['Events','agent_call'('src_span'(194,22,194,27,7409,5),'union',['setExp'('rangeEnum'(['tock'])),'val_of'('Delayable','src_span'(194,35,194,44,7422,9))])]),'src_span'(194,1,194,46,7388,45)).
'bindval'('TOCKS','prefix'('src_span'(206,9,206,13,7857,4),[],'tock','val_of'('TOCKS','src_span'(206,17,206,22,7865,5)),'src_span'(206,14,206,16,7861,13)),'src_span'(206,1,206,22,7849,21)).
'agent'('max'(_S),'let'(['agent'('pick'('singleSetPat'([_x])),_x,'src_span'(211,26,211,27,8037,1))],'agent_call'('src_span'(212,10,212,14,8055,4),'pick',['setExp'('rangeEnum'([_x2]),['comprehensionGenerator'(_x2,_S),'comprehensionGuard'('=='('setExp'('rangeEnum'([_y]),['comprehensionGenerator'(_y,_S),'comprehensionGuard'('>'(_y,_x2))]),'setExp'('rangeEnum'([]))))])])),'src_span'(211,10,212,55,8021,79)).
'agent'('AGREEBY'('int'(0),_alive),'[]'('[]'('[]'('[]'('&'('!='(_alive,'setExp'('rangeEnum'([]))),'prefix'('src_span'(222,34,222,40,8487,6),['inGuard'(_m,_alive),'out'('agent_call'('src_span'(222,49,222,52,8502,3),'max',[_alive]))],'leader','agent_call'('src_span'(222,63,222,70,8516,7),'AGREEBY',['int'(0),_alive]),'src_span'(222,60,222,62,8512,31))),'prefix'('src_span'(223,16,223,20,8548,4),[],'tock','agent_call'('src_span'(223,24,223,31,8556,7),'AGREEBY',['int'(0),_alive]),'src_span'(223,21,223,23,8552,24)),'src_span_operator'('no_loc_info_available','src_span'(223,13,223,15,8545,2))),'prefix'('src_span'(224,9,224,13,8581,4),['in'(_k133)],'fail','agent_call'('src_span'(224,19,224,27,8591,8),'AGREEBY\x27\',['agent_call'('src_span'(224,28,224,32,8600,4),'diff',[_alive,'setExp'('rangeEnum'([_k133]))])]),'src_span'(224,16,224,18,8587,31)),'src_span_operator'('no_loc_info_available','src_span'(224,6,224,8,8578,2))),'prefix'('src_span'(225,9,225,15,8625,6),['in'(_k134)],'revive','agent_call'('src_span'(225,21,225,28,8637,7),'AGREEBY',['val_of'('TS','src_span'(225,29,225,31,8645,2)),'agent_call'('src_span'(225,32,225,37,8648,5),'union',[_alive,'setExp'('rangeEnum'([_k134]))])]),'src_span'(225,18,225,20,8633,34)),'src_span_operator'('no_loc_info_available','src_span'(225,6,225,8,8622,2))),'prefix'('src_span'(226,16,226,20,8681,4),['in'(_n135),'in'(_k136)],'test','agent_call'('src_span'(226,28,226,35,8693,7),'AGREEBY',['int'(0),_alive]),'src_span'(226,25,226,27,8689,22)),'src_span_operator'('no_loc_info_available','src_span'(226,13,226,15,8678,2))),'no_loc_info_available').
'agent'('AGREEBY'(_n137,_alive2),'[]'('[]'('[]'('[]'('prefix'('src_span'(231,21,231,27,8816,6),['in'(_m2),'in'(_k140)],'leader','agent_call'('src_span'(231,35,231,42,8830,7),'AGREEBY',[_n137,_alive2]),'src_span'(231,32,231,34,8826,22)),'prefix'('src_span'(232,16,232,20,8863,4),[],'tock','agent_call'('src_span'(232,24,232,31,8871,7),'AGREEBY',['-'(_n137,'int'(1)),_alive2]),'src_span'(232,21,232,23,8867,26)),'src_span_operator'('no_loc_info_available','src_span'(232,13,232,15,8860,2))),'prefix'('src_span'(233,9,233,13,8898,4),['in'(_k141)],'fail','agent_call'('src_span'(233,19,233,27,8908,8),'AGREEBY\x27\',['agent_call'('src_span'(233,28,233,32,8917,4),'diff',[_alive2,'setExp'('rangeEnum'([_k141]))])]),'src_span'(233,16,233,18,8904,31)),'src_span_operator'('no_loc_info_available','src_span'(233,6,233,8,8895,2))),'prefix'('src_span'(234,9,234,15,8942,6),['in'(_k142)],'revive','agent_call'('src_span'(234,21,234,28,8954,7),'AGREEBY',['val_of'('TS','src_span'(234,29,234,31,8962,2)),'agent_call'('src_span'(234,32,234,37,8965,5),'union',[_alive2,'setExp'('rangeEnum'([_k142]))])]),'src_span'(234,18,234,20,8950,34)),'src_span_operator'('no_loc_info_available','src_span'(234,6,234,8,8939,2))),'prefix'('src_span'(235,16,235,20,8998,4),['in'(_m3),'in'(_k144)],'test','agent_call'('src_span'(235,28,235,35,9010,7),'AGREEBY',[_n137,_alive2]),'src_span'(235,25,235,27,9006,22)),'src_span_operator'('no_loc_info_available','src_span'(235,13,235,15,8995,2))),'no_loc_info_available').
'agent'('AGREEBY\x27\'(_alive3),'[]'('[]'('[]'('[]'('|~|'('stop'('src_span'(240,21,240,25,9135,4)),'prefix'('src_span'(240,30,240,36,9144,6),['in'(_m4),'in'(_k147)],'leader','agent_call'('src_span'(240,44,240,52,9158,8),'AGREEBY\x27\',[_alive3]),'src_span'(240,41,240,43,9154,21)),'src_span_operator'('no_loc_info_available','src_span'(240,26,240,29,9140,3))),'prefix'('src_span'(241,16,241,20,9190,4),[],'tock','agent_call'('src_span'(241,24,241,32,9198,8),'AGREEBY\x27\',[_alive3]),'src_span'(241,21,241,23,9194,23)),'src_span_operator'('no_loc_info_available','src_span'(241,13,241,15,9187,2))),'prefix'('src_span'(242,16,242,20,9229,4),['in'(_k148)],'fail','agent_call'('src_span'(242,26,242,34,9239,8),'AGREEBY\x27\',['agent_call'('src_span'(242,35,242,39,9248,4),'diff',[_alive3,'setExp'('rangeEnum'([_k148]))])]),'src_span'(242,23,242,25,9235,31)),'src_span_operator'('no_loc_info_available','src_span'(242,13,242,15,9226,2))),'prefix'('src_span'(243,16,243,22,9280,6),['in'(_k149)],'revive','agent_call'('src_span'(243,28,243,35,9292,7),'AGREEBY',['val_of'('TS','src_span'(243,36,243,38,9300,2)),'agent_call'('src_span'(243,39,243,44,9303,5),'union',[_alive3,'setExp'('rangeEnum'([_k149]))])]),'src_span'(243,25,243,27,9288,34)),'src_span_operator'('no_loc_info_available','src_span'(243,13,243,15,9277,2))),'prefix'('src_span'(244,16,244,20,9336,4),['in'(_n150),'in'(_k151)],'test','agent_call'('src_span'(244,28,244,35,9348,7),'AGREEBY',['val_of'('TS','src_span'(244,36,244,38,9356,2)),_alive3]),'src_span'(244,25,244,27,9344,23)),'src_span_operator'('no_loc_info_available','src_span'(244,13,244,15,9333,2))),'no_loc_info_available').
'bindval'('AlphaAgree','closure'(['tock','fail','revive','leader','test']),'src_span'(247,1,247,50,9368,49)).
'assertRef'('False','agent_call'('src_span'(249,8,249,15,9426,7),'AGREEBY',['int'(0),'val_of'('Proc1','src_span'(249,18,249,23,9436,5))]),'Trace','\x5c\'('val_of'('Network','src_span'(249,29,249,36,9447,7)),'agent_call'('src_span'(249,37,249,41,9455,4),'diff',['Events','val_of'('AlphaAgree','src_span'(249,49,249,59,9467,10))]),'src_span_operator'('no_loc_info_available','src_span'(249,36,249,37,9454,1))),'src_span'(249,1,249,60,9419,59)).
'agent'('INLEADER'('int'(0),_alive4),'[]'('[]'('[]'('[]'('&'('!='(_alive4,'setExp'('rangeEnum'([]))),'let'(['bindval'('m5','agent_call'('src_span'(259,20,259,23,9749,3),'max',[_alive4]),'src_span'(259,18,259,30,9747,12))],'[]'('prefix'('src_span'(259,38,259,48,9767,10),[],'dotTuple'(['leader','val_of'('m5','src_span'(259,45,259,46,9774,1)),'val_of'('m5','src_span'(259,47,259,48,9776,1))]),'agent_call'('src_span'(259,52,259,60,9781,8),'INLEADER',['int'(0),_alive4]),'src_span'(259,49,259,51,9777,31)),'|~|'('stop'('src_span'(260,17,260,21,9815,4)),'prefix'('src_span'(260,26,260,32,9824,6),['inGuard'(_j9,'agent_call'('src_span'(260,35,260,39,9833,4),'diff',['val_of'('Proc1','src_span'(260,40,260,45,9838,5)),'setExp'('rangeEnum'(['val_of'('m5','src_span'(260,47,260,48,9845,1))]))])),'in'(_k155)],'leader','agent_call'('src_span'(260,56,260,64,9854,8),'INLEADER',['int'(0),_alive4]),'src_span'(260,53,260,55,9850,23)),'src_span_operator'('no_loc_info_available','src_span'(260,22,260,25,9820,3))),'src_span_operator'('no_loc_info_available','src_span'(260,13,260,15,9811,2))))),'prefix'('src_span'(261,16,261,20,9889,4),[],'tock','agent_call'('src_span'(261,24,261,32,9897,8),'INLEADER',['int'(0),_alive4]),'src_span'(261,21,261,23,9893,25)),'src_span_operator'('no_loc_info_available','src_span'(261,13,261,15,9886,2))),'prefix'('src_span'(262,9,262,13,9923,4),['in'(_k156)],'fail','agent_call'('src_span'(262,19,262,28,9933,9),'INLEADER\x27\',['agent_call'('src_span'(262,29,262,33,9943,4),'diff',[_alive4,'setExp'('rangeEnum'([_k156]))])]),'src_span'(262,16,262,18,9929,32)),'src_span_operator'('no_loc_info_available','src_span'(262,6,262,8,9920,2))),'prefix'('src_span'(263,9,263,15,9968,6),['in'(_k157)],'revive','agent_call'('src_span'(263,21,263,29,9980,8),'INLEADER',['val_of'('TS','src_span'(263,30,263,32,9989,2)),'agent_call'('src_span'(263,33,263,38,9992,5),'union',[_alive4,'setExp'('rangeEnum'([_k157]))])]),'src_span'(263,18,263,20,9976,35)),'src_span_operator'('no_loc_info_available','src_span'(263,6,263,8,9965,2))),'prefix'('src_span'(264,16,264,20,10025,4),['in'(_m6),'in'(_k159)],'test','agent_call'('src_span'(264,28,264,36,10037,8),'INLEADER',['int'(0),_alive4]),'src_span'(264,25,264,27,10033,23)),'src_span_operator'('no_loc_info_available','src_span'(264,13,264,15,10022,2))),'no_loc_info_available').
'agent'('INLEADER'(_n160,_alive5),'[]'('[]'('[]'('[]'('|~|'('stop'('src_span'(266,22,266,26,10077,4)),'prefix'('src_span'(266,31,266,37,10086,6),['in'(_m7),'in'(_k163)],'leader','agent_call'('src_span'(266,45,266,53,10100,8),'INLEADER',[_n160,_alive5]),'src_span'(266,42,266,44,10096,23)),'src_span_operator'('no_loc_info_available','src_span'(266,27,266,30,10082,3))),'prefix'('src_span'(267,16,267,20,10134,4),[],'tock','agent_call'('src_span'(267,24,267,32,10142,8),'INLEADER',['-'(_n160,'int'(1)),_alive5]),'src_span'(267,21,267,23,10138,27)),'src_span_operator'('no_loc_info_available','src_span'(267,13,267,15,10131,2))),'prefix'('src_span'(268,9,268,13,10170,4),['in'(_k164)],'fail','agent_call'('src_span'(268,19,268,28,10180,9),'INLEADER\x27\',['agent_call'('src_span'(268,29,268,33,10190,4),'diff',[_alive5,'setExp'('rangeEnum'([_k164]))])]),'src_span'(268,16,268,18,10176,32)),'src_span_operator'('no_loc_info_available','src_span'(268,6,268,8,10167,2))),'prefix'('src_span'(269,9,269,15,10215,6),['in'(_k165)],'revive','agent_call'('src_span'(269,21,269,29,10227,8),'INLEADER',['val_of'('TS','src_span'(269,30,269,32,10236,2)),'agent_call'('src_span'(269,33,269,38,10239,5),'union',[_alive5,'setExp'('rangeEnum'([_k165]))])]),'src_span'(269,18,269,20,10223,35)),'src_span_operator'('no_loc_info_available','src_span'(269,6,269,8,10212,2))),'prefix'('src_span'(270,16,270,20,10272,4),['in'(_m8),'in'(_k167)],'test','agent_call'('src_span'(270,28,270,36,10284,8),'INLEADER',[_n160,_alive5]),'src_span'(270,25,270,27,10280,23)),'src_span_operator'('no_loc_info_available','src_span'(270,13,270,15,10269,2))),'no_loc_info_available').
'agent'('INLEADER\x27\'(_alive6),'[]'('[]'('[]'('[]'('|~|'('stop'('src_span'(272,21,272,25,10323,4)),'prefix'('src_span'(272,30,272,36,10332,6),['in'(_m9),'in'(_k170)],'leader','agent_call'('src_span'(272,44,272,53,10346,9),'INLEADER\x27\',[_alive6]),'src_span'(272,41,272,43,10342,22)),'src_span_operator'('no_loc_info_available','src_span'(272,26,272,29,10328,3))),'prefix'('src_span'(273,16,273,20,10379,4),[],'tock','agent_call'('src_span'(273,24,273,33,10387,9),'INLEADER\x27\',[_alive6]),'src_span'(273,21,273,23,10383,24)),'src_span_operator'('no_loc_info_available','src_span'(273,13,273,15,10376,2))),'prefix'('src_span'(274,9,274,13,10412,4),['in'(_k171)],'fail','agent_call'('src_span'(274,19,274,28,10422,9),'INLEADER\x27\',['agent_call'('src_span'(274,29,274,33,10432,4),'diff',[_alive6,'setExp'('rangeEnum'([_k171]))])]),'src_span'(274,16,274,18,10418,32)),'src_span_operator'('no_loc_info_available','src_span'(274,6,274,8,10409,2))),'prefix'('src_span'(275,9,275,15,10457,6),['in'(_k172)],'revive','agent_call'('src_span'(275,21,275,29,10469,8),'INLEADER',['val_of'('TS','src_span'(275,30,275,32,10478,2)),'agent_call'('src_span'(275,33,275,38,10481,5),'union',[_alive6,'setExp'('rangeEnum'([_k172]))])]),'src_span'(275,18,275,20,10465,35)),'src_span_operator'('no_loc_info_available','src_span'(275,6,275,8,10454,2))),'prefix'('src_span'(276,16,276,20,10514,4),['in'(_m173),'in'(_k174)],'test','agent_call'('src_span'(276,28,276,36,10526,8),'INLEADER',['val_of'('TS','src_span'(276,37,276,39,10535,2)),_alive6]),'src_span'(276,25,276,27,10522,24)),'src_span_operator'('no_loc_info_available','src_span'(276,13,276,15,10511,2))),'no_loc_info_available').
'assertRef'('False','agent_call'('src_span'(278,8,278,16,10553,8),'INLEADER',['int'(0),'val_of'('Proc1','src_span'(278,19,278,24,10564,5))]),'Trace','\x5c\'('val_of'('Network','src_span'(278,30,278,37,10575,7)),'agent_call'('src_span'(278,38,278,42,10583,4),'diff',['Events','val_of'('AlphaAgree','src_span'(278,50,278,60,10595,10))]),'src_span_operator'('no_loc_info_available','src_span'(278,37,278,38,10582,1))),'src_span'(278,1,278,61,10546,60)).
'bindval'('FailINLEADER','sharing'('closure'(['fail','revive','test']),'agent_call'('src_span'(291,16,291,24,11269,8),'INLEADER',['int'(0),'val_of'('Proc1','src_span'(291,27,291,32,11280,5))]),'agent_call'('src_span'(292,16,292,22,11330,6),'normal',['builtin_call'('CHAOS'('src_span'(292,23,292,52,11337,29),'closure'(['fail','revive','test'])))]),'src_span'(291,34,291,60,11287,26)),'src_span'(291,1,292,53,11254,113)).
'agent'('SOMELEADER'('int'(0),_alive7),'[]'('[]'('[]'('[]'('repChoice'(['comprehensionGenerator'(_i,_alive7)],'repInternalChoice'(['comprehensionGenerator'(_j177,'val_of'('Proc1','src_span'(301,33,301,38,11682,5)))],'prefix'('src_span'(301,41,301,51,11690,10),[],'dotTuple'(['leader',_i,_j177]),'agent_call'('src_span'(301,55,301,65,11704,10),'SOMELEADER',['int'(0),_alive7]),'src_span'(301,52,301,54,11700,33)),'src_span'(301,31,301,40,11680,9)),'src_span'(301,16,301,25,11665,9)),'prefix'('src_span'(302,16,302,20,11741,4),[],'tock','agent_call'('src_span'(302,24,302,34,11749,10),'SOMELEADER',['int'(0),_alive7]),'src_span'(302,21,302,23,11745,27)),'src_span_operator'('no_loc_info_available','src_span'(302,13,302,15,11738,2))),'prefix'('src_span'(303,9,303,13,11777,4),['in'(_k178)],'fail','agent_call'('src_span'(303,19,303,30,11787,11),'SOMELEADER\x27\',['agent_call'('src_span'(303,31,303,35,11799,4),'diff',[_alive7,'setExp'('rangeEnum'([_k178]))])]),'src_span'(303,16,303,18,11783,34)),'src_span_operator'('no_loc_info_available','src_span'(303,6,303,8,11774,2))),'prefix'('src_span'(304,9,304,15,11824,6),['in'(_k179)],'revive','agent_call'('src_span'(304,21,304,31,11836,10),'SOMELEADER',['val_of'('TS','src_span'(304,32,304,34,11847,2)),'agent_call'('src_span'(304,35,304,40,11850,5),'union',[_alive7,'setExp'('rangeEnum'([_k179]))])]),'src_span'(304,18,304,20,11832,37)),'src_span_operator'('no_loc_info_available','src_span'(304,6,304,8,11821,2))),'prefix'('src_span'(305,16,305,20,11883,4),['in'(_m180),'in'(_k181)],'test','agent_call'('src_span'(305,28,305,38,11895,10),'SOMELEADER',['int'(0),_alive7]),'src_span'(305,25,305,27,11891,25)),'src_span_operator'('no_loc_info_available','src_span'(305,13,305,15,11880,2))),'no_loc_info_available').
'agent'('SOMELEADER'(_n182,_alive8),'[]'('[]'('[]'('[]'('|~|'('stop'('src_span'(307,24,307,28,11939,4)),'prefix'('src_span'(307,33,307,39,11948,6),['in'(_m184),'in'(_k185)],'leader','agent_call'('src_span'(307,47,307,57,11962,10),'SOMELEADER',[_n182,_alive8]),'src_span'(307,44,307,46,11958,25)),'src_span_operator'('no_loc_info_available','src_span'(307,29,307,32,11944,3))),'prefix'('src_span'(308,16,308,20,11998,4),[],'tock','agent_call'('src_span'(308,24,308,34,12006,10),'SOMELEADER',['-'(_n182,'int'(1)),_alive8]),'src_span'(308,21,308,23,12002,29)),'src_span_operator'('no_loc_info_available','src_span'(308,13,308,15,11995,2))),'prefix'('src_span'(309,9,309,13,12036,4),['in'(_k186)],'fail','agent_call'('src_span'(309,19,309,30,12046,11),'SOMELEADER\x27\',['agent_call'('src_span'(309,31,309,35,12058,4),'diff',[_alive8,'setExp'('rangeEnum'([_k186]))])]),'src_span'(309,16,309,18,12042,34)),'src_span_operator'('no_loc_info_available','src_span'(309,6,309,8,12033,2))),'prefix'('src_span'(310,9,310,15,12083,6),['in'(_k187)],'revive','agent_call'('src_span'(310,21,310,31,12095,10),'SOMELEADER',['val_of'('TS','src_span'(310,32,310,34,12106,2)),'agent_call'('src_span'(310,35,310,40,12109,5),'union',[_alive8,'setExp'('rangeEnum'([_k187]))])]),'src_span'(310,18,310,20,12091,37)),'src_span_operator'('no_loc_info_available','src_span'(310,6,310,8,12080,2))),'prefix'('src_span'(311,16,311,20,12142,4),['in'(_m188),'in'(_k189)],'test','agent_call'('src_span'(311,28,311,38,12154,10),'SOMELEADER',[_n182,_alive8]),'src_span'(311,25,311,27,12150,25)),'src_span_operator'('no_loc_info_available','src_span'(311,13,311,15,12139,2))),'no_loc_info_available').
'agent'('SOMELEADER\x27\'(_alive9),'[]'('[]'('[]'('[]'('|~|'('stop'('src_span'(313,23,313,27,12197,4)),'prefix'('src_span'(313,32,313,38,12206,6),['in'(_m191),'in'(_k192)],'leader','agent_call'('src_span'(313,46,313,57,12220,11),'SOMELEADER\x27\',[_alive9]),'src_span'(313,43,313,45,12216,24)),'src_span_operator'('no_loc_info_available','src_span'(313,28,313,31,12202,3))),'prefix'('src_span'(314,16,314,20,12255,4),[],'tock','agent_call'('src_span'(314,24,314,35,12263,11),'SOMELEADER\x27\',[_alive9]),'src_span'(314,21,314,23,12259,26)),'src_span_operator'('no_loc_info_available','src_span'(314,13,314,15,12252,2))),'prefix'('src_span'(315,9,315,13,12290,4),['in'(_k193)],'fail','agent_call'('src_span'(315,19,315,30,12300,11),'SOMELEADER\x27\',['agent_call'('src_span'(315,31,315,35,12312,4),'diff',[_alive9,'setExp'('rangeEnum'([_k193]))])]),'src_span'(315,16,315,18,12296,34)),'src_span_operator'('no_loc_info_available','src_span'(315,6,315,8,12287,2))),'prefix'('src_span'(316,9,316,15,12337,6),['in'(_k194)],'revive','agent_call'('src_span'(316,21,316,31,12349,10),'SOMELEADER',['val_of'('TS','src_span'(316,32,316,34,12360,2)),'agent_call'('src_span'(316,35,316,40,12363,5),'union',[_alive9,'setExp'('rangeEnum'([_k194]))])]),'src_span'(316,18,316,20,12345,37)),'src_span_operator'('no_loc_info_available','src_span'(316,6,316,8,12334,2))),'prefix'('src_span'(317,16,317,20,12396,4),['in'(_m195),'in'(_k196)],'test','agent_call'('src_span'(317,28,317,38,12408,10),'SOMELEADER',['val_of'('TS','src_span'(317,39,317,41,12419,2)),_alive9]),'src_span'(317,25,317,27,12404,26)),'src_span_operator'('no_loc_info_available','src_span'(317,13,317,15,12393,2))),'no_loc_info_available').
'bindval'('FailSOMELEADER','sharing'('closure'(['fail','revive','test']),'agent_call'('src_span'(322,18,322,28,12584,10),'SOMELEADER',['int'(0),'val_of'('Proc1','src_span'(322,31,322,36,12597,5))]),'agent_call'('src_span'(323,16,323,22,12647,6),'normal',['builtin_call'('CHAOS'('src_span'(323,23,323,52,12654,29),'closure'(['fail','revive','test'])))]),'src_span'(322,38,322,64,12604,26)),'src_span'(322,1,323,53,12567,117)).
'comment'('lineComment'('-- The bully algorithm modelled in CSP'),'src_position'(1,2,1,38)).
'comment'('lineComment'('-- Bill Roscoe '),'src_position'(3,1,41,15)).
'comment'('lineComment'('-- See chapter 14 of Understanding Concurrent Systems for details of the'),'src_position'(5,1,58,72)).
'comment'('lineComment'('-- algorithm.'),'src_position'(6,1,131,13)).
'comment'('lineComment'('-- The number of nodes, the time-out intervals (T1 and T2) and the settle-by'),'src_position'(8,1,146,76)).
'comment'('lineComment'('-- parameter for the specifications'),'src_position'(9,1,223,35)).
'comment'('lineComment'('-- All communications in this algorithm go from high to low or low to high'),'src_position'(19,1,305,74)).
'comment'('lineComment'('-- so it is useful to have the following sets defined:'),'src_position'(20,1,380,54)).
'comment'('lineComment'('-- The alphabet as described in the assignment'),'src_position'(25,1,503,46)).
'comment'('lineComment'('-- Now we have a number of states a node can be in.  The first is when it'),'src_position'(41,1,741,73)).
'comment'('lineComment'('-- is about to begin an election'),'src_position'(42,1,815,32)).
'comment'('lineComment'('-- which results in it sending successive election messages to the appropriate'),'src_position'(46,1,890,78)).
'comment'('lineComment'('-- nodes.  Note how it can handle the receipt of any message it might'),'src_position'(47,1,969,69)).
'comment'('lineComment'('-- receive, with varying results...'),'src_position'(48,1,1039,35)).
'comment'('lineComment'('-- Here is is waiting for answers from its election messages, with the'),'src_position'(59,1,1567,70)).
'comment'('lineComment'('-- time-out making it the coordinator if it has not had one within T1.'),'src_position'(60,1,1638,70)).
'comment'('lineComment'('-- After it has had its answer message, it sits and waits to be sent a'),'src_position'(72,1,2201,70)).
'comment'('lineComment'('-- coordinator message (or any of a number of others), before starting '),'src_position'(73,1,2272,71)).
'comment'('lineComment'('-- another election if nothing has happened.'),'src_position'(74,1,2344,44)).
'comment'('lineComment'('-- This is the state it is in when it has decided, for want of life above it,'),'src_position'(88,1,2960,77)).
'comment'('lineComment'('-- that it is the current coordinator'),'src_position'(89,1,3038,37)).
'comment'('lineComment'('-- It distributes a coordinator message to all below it.  Note that since it'),'src_position'(93,1,3119,76)).
'comment'('lineComment'('-- is the coordinator, it sends a positive response to the test message,'),'src_position'(94,1,3196,72)).
'comment'('lineComment'('-- unlike earlier states'),'src_position'(95,1,3269,24)).
'comment'('lineComment'('-- There are two running states, one as coordinator...'),'src_position'(104,1,3654,54)).
'comment'('lineComment'('-- and one not, that thinks k is coordinator... '),'src_position'(113,1,4033,48)).
'comment'('lineComment'('-- thus it can test its supposed corrdinator, insitaged by the test.n.k event'),'src_position'(124,1,4498,77)).
'comment'('lineComment'('-- above, the test being successful if ok is received, failing by time-out'),'src_position'(125,1,4576,74)).
'comment'('lineComment'('-- of tock occurs first.'),'src_position'(126,1,4651,24)).
'comment'('lineComment'('-- After performing one test successfully, it goes into the following state'),'src_position'(137,1,5098,75)).
'comment'('lineComment'('-- in which it has to wait a time unit before performing another one (thereby'),'src_position'(138,1,5174,77)).
'comment'('lineComment'('-- avoiding a potential divergence)'),'src_position'(139,1,5252,35)).
'comment'('lineComment'('-- When a process has failed...'),'src_position'(150,1,5715,31)).
'comment'('lineComment'('-- it can\x27\t be revived until one time unit has passed'),'src_position'(160,1,6076,53)).
'comment'('lineComment'('-- We can put the system together (exploiting a little bit of compression'),'src_position'(173,1,6567,73)).
'comment'('lineComment'('-- on the individual nodes) as follows:'),'src_position'(174,1,6641,39)).
'comment'('lineComment'('-- The first thing to try with any timed example is a timing consistency'),'src_position'(187,1,7023,72)).
'comment'('lineComment'('-- check.  The following events are all deemed "delayable" because we'),'src_position'(188,1,7096,69)).
'comment'('lineComment'('-- do not want to have to rely on them happening urgently for time to'),'src_position'(189,1,7166,69)).
'comment'('lineComment'('-- pass (the inclusion of test here is not essential, and might be wrong'),'src_position'(190,1,7236,72)).
'comment'('lineComment'('-- in other modelling approaches).'),'src_position'(191,1,7309,34)).
'comment'('lineComment'('-- The following give us two nearly equivalent ways of testing it, the'),'src_position'(196,1,7435,70)).
'comment'('lineComment'('-- second being stronger because it proves that hiding the urgent events'),'src_position'(197,1,7506,72)).
'comment'('lineComment'('-- can\x27\t introduce divergence, which would break various assumptions of'),'src_position'(198,1,7579,71)).
'comment'('lineComment'('-- the abstraction method.'),'src_position'(199,1,7651,26)).
'comment'('lineComment'('--assert TOCKS [F= (Network [|Delayable|] '),'src_position'(201,1,7679,42)).
'comment'('lineComment'('--                  normal(CHAOS(Delayable)))\x5c\diff(Events,{tock})'),'src_position'(202,1,7722,65)).
'comment'('lineComment'('--assert TOCKS ||| CHAOS(Delayable) [FD=  Network \x5c\ Urgent'),'src_position'(204,1,7789,58)).
'comment'('lineComment'('-- We will want normally to have our processes agree that the maximum'),'src_position'(208,1,7872,69)).
'comment'('lineComment'('-- live one is the leader, so the following function comes in handy:'),'src_position'(209,1,7942,68)).
'comment'('lineComment'('-- The following specification holds the current set of live processes'),'src_position'(214,1,8102,70)).
'comment'('lineComment'('-- as a parameter, and says that when appropriate things have happened since'),'src_position'(215,1,8173,76)).
'comment'('lineComment'('-- a node last failed or revived, anyone who expresses an opinion about'),'src_position'(216,1,8250,71)).
'comment'('lineComment'('-- who the leader is says the highest live one.'),'src_position'(217,1,8322,47)).
'comment'('lineComment'('-- Initially this condition holds, but it is disabled by a failure or'),'src_position'(219,1,8371,69)).
'comment'('lineComment'('-- revival.'),'src_position'(220,1,8441,11)).
'comment'('lineComment'('-- The following states will allow any leader events until n tocks have'),'src_position'(228,1,8711,71)).
'comment'('lineComment'('-- passed..'),'src_position'(229,1,8783,11)).
'comment'('lineComment'('-- while this one allows any until a test event has occurred followed by'),'src_position'(237,1,9028,72)).
'comment'('lineComment'('-- TS tocks.'),'src_position'(238,1,9101,12)).
'comment'('lineComment'('-- So the above trace spec (which fails) says that the network has the'),'src_position'(251,1,9480,70)).
'comment'('lineComment'('-- given property.'),'src_position'(252,1,9551,18)).
'comment'('lineComment'('-- The above having failed, we can see if the max-process always agrees'),'src_position'(254,1,9571,71)).
'comment'('lineComment'('-- it is the leader in the same circumstances....'),'src_position'(255,1,9643,49)).
'comment'('lineComment'('-- This fails as well (in turns out that making the distribution of the'),'src_position'(280,1,10608,71)).
'comment'('lineComment'('-- co-ordinator messages non-atomic with the possibility of a process'),'src_position'(281,1,10680,69)).
'comment'('lineComment'('-- failing mid-way through a distribution creates havoc with the'),'src_position'(282,1,10750,64)).
'comment'('lineComment'('-- algorithm: it is certainly not clear from the book that it depends on'),'src_position'(283,1,10815,72)).
'comment'('lineComment'('-- this atomicity).  We could have strengthened this into a failures'),'src_position'(284,1,10888,68)).
'comment'('lineComment'('-- specification, saying that the max process can always say it is the'),'src_position'(285,1,10957,70)).
'comment'('lineComment'('-- leader in the given circumstances, as follows (which explains why'),'src_position'(286,1,11028,68)).
'comment'('lineComment'('-- all the leader events above that we do not want to insist on are'),'src_position'(287,1,11097,67)).
'comment'('lineComment'('-- put in |~| choice with STOP; the other events being refusable by'),'src_position'(288,1,11165,67)).
'comment'('lineComment'('-- the CHAOS below)'),'src_position'(289,1,11233,19)).
'comment'('lineComment'('--assert FailINLEADER [F=  Network\x5c\diff(Events,AlphaAgree)'),'src_position'(294,1,11369,58)).
'comment'('lineComment'('-- On the same principle, the following specification says that'),'src_position'(296,1,11429,63)).
'comment'('lineComment'('-- under the same stability conditions as before, every living process'),'src_position'(297,1,11493,70)).
'comment'('lineComment'('-- has an option about the leader, even if not the right one!'),'src_position'(298,1,11564,61)).
'comment'('lineComment'('-- As a trace specification the above says nothing of any interest.  The'),'src_position'(319,1,12430,72)).
'comment'('lineComment'('-- same device as above turns it into the right failures spec:'),'src_position'(320,1,12503,62)).
'comment'('lineComment'('--assert FailSOMELEADER [F=  Network\x5c\diff(Events,AlphaAgree)'),'src_position'(325,1,12686,60)).
'comment'('lineComment'('-- As it turns out (and somewhat to my surprise, even having seen the'),'src_position'(327,1,12748,69)).
'comment'('lineComment'('-- problems that arise earlier on) even this specification fails.'),'src_position'(328,1,12818,65)).
'comment'('lineComment'('-- It would be a great achievement (I think) to spot what can go wrong'),'src_position'(329,1,12884,70)).
'comment'('lineComment'('-- without running the check!'),'src_position'(330,1,12955,29)).
'comment'('lineComment'('-- You can fix the algorithm by making nodes test their coordinator'),'src_position'(332,1,12986,67)).
'comment'('lineComment'('-- a small interval (one tock in our case, and in any case enough for'),'src_position'(333,1,13054,69)).
'comment'('lineComment'('-- the coordinator to have finished distribution) after being "bullied"'),'src_position'(334,1,13124,71)).
'comment'('lineComment'('-- namely told the identity of the coordinator.  See bully2.csp'),'src_position'(335,1,13196,63)).
'comment'('lineComment'('-- MAIN = test.0.3 -> tock -> fail?x -> STOP'),'src_position'(337,1,13261,44)).
'comment'('lineComment'('-- MAIN = Node(1)'),'src_position'(338,1,13306,17)).
'symbol'('N','N','src_span'(11,1,11,2,260,1),'Ident (Groundrep.)').
'symbol'('T1','T1','src_span'(13,1,13,3,265,2),'Ident (Groundrep.)').
'symbol'('T2','T2','src_span'(14,1,14,3,272,2),'Ident (Groundrep.)').
'symbol'('TS','TS','src_span'(15,1,15,3,279,2),'Ident (Groundrep.)').
'symbol'('Proc1','Proc1','src_span'(17,1,17,6,287,5),'Ident (Groundrep.)').
'symbol'('above','above','src_span'(22,1,22,6,436,5),'Funktion or Process').
'symbol'('n','n','src_span'(22,7,22,8,442,1),'Ident (Prolog Variable)').
'symbol'('k','k','src_span'(22,17,22,18,452,1),'Ident (Prolog Variable)').
'symbol'('below','below','src_span'(23,1,23,6,469,5),'Funktion or Process').
'symbol'('n2','n','src_span'(23,7,23,8,475,1),'Ident (Prolog Variable)').
'symbol'('k2','k','src_span'(23,17,23,18,485,1),'Ident (Prolog Variable)').
'symbol'('election','election','src_span'(27,9,27,17,559,8),'Channel').
'symbol'('answer','answer','src_span'(29,9,29,15,589,6),'Channel').
'symbol'('coordinator','coordinator','src_span'(31,9,31,20,617,11),'Channel').
'symbol'('fail','fail','src_span'(33,9,33,13,650,4),'Channel').
'symbol'('revive','revive','src_span'(33,15,33,21,656,6),'Channel').
'symbol'('test','test','src_span'(35,9,35,13,678,4),'Channel').
'symbol'('ok','ok','src_span'(35,14,35,16,683,2),'Channel').
'symbol'('leader','leader','src_span'(37,9,37,15,707,6),'Channel').
'symbol'('tock','tock','src_span'(39,9,39,13,735,4),'Channel').
'symbol'('BeginElection','BeginElection','src_span'(44,1,44,14,849,13),'Funktion or Process').
'symbol'('n3','n','src_span'(44,15,44,16,863,1),'Ident (Prolog Variable)').
'symbol'('SendElections','SendElections','src_span'(50,1,50,14,1076,13),'Funktion or Process').
'symbol'('k3','k','src_span'(50,15,50,16,1090,1),'Ident (Prolog Variable)').
'symbol'('n4','n','src_span'(50,17,50,18,1092,1),'Ident (Prolog Variable)').
'symbol'('k\x27\','k\x27\','src_span'(52,33,52,35,1226,2),'Ident (Prolog Variable)').
'symbol'('k4','k','src_span'(53,31,53,32,1305,1),'Ident (Prolog Variable)').
'symbol'('k\x27\2','k\x27\','src_span'(54,27,54,29,1370,2),'Ident (Prolog Variable)').
'symbol'('k5','k','src_span'(55,36,55,37,1441,1),'Ident (Prolog Variable)').
'symbol'('k\x27\3','k\x27\','src_span'(57,29,57,31,1528,2),'Ident (Prolog Variable)').
'symbol'('AwaitAnswers','AwaitAnswers','src_span'(62,1,62,13,1710,12),'Funktion or Process').
'symbol'('t','t','src_span'(62,14,62,15,1723,1),'Ident (Prolog Variable)').
'symbol'('n5','n','src_span'(62,16,62,17,1725,1),'Ident (Prolog Variable)').
'symbol'('k6','k','src_span'(65,28,65,29,1872,1),'Ident (Prolog Variable)').
'symbol'('k7','k','src_span'(66,24,66,25,1934,1),'Ident (Prolog Variable)').
'symbol'('k8','k','src_span'(67,30,67,31,1997,1),'Ident (Prolog Variable)').
'symbol'('k9','k','src_span'(68,33,68,34,2077,1),'Ident (Prolog Variable)').
'symbol'('k73','k','src_span'(70,29,70,30,2164,1),'Ident (Prolog Variable)').
'symbol'('AwaitCoordinator','AwaitCoordinator','src_span'(77,1,77,17,2391,16),'Funktion or Process').
'symbol'('t2','t','src_span'(77,18,77,19,2408,1),'Ident (Prolog Variable)').
'symbol'('n6','n','src_span'(77,20,77,21,2410,1),'Ident (Prolog Variable)').
'symbol'('k76','k','src_span'(80,37,80,38,2573,1),'Ident (Prolog Variable)').
'symbol'('k77','k','src_span'(81,31,81,32,2633,1),'Ident (Prolog Variable)').
'symbol'('k78','k','src_span'(82,27,82,28,2697,1),'Ident (Prolog Variable)').
'symbol'('k79','k','src_span'(83,33,83,34,2767,1),'Ident (Prolog Variable)').
'symbol'('k80','k','src_span'(86,29,86,30,2919,1),'Ident (Prolog Variable)').
'symbol'('BecomeCoordinator','BecomeCoordinator','src_span'(91,1,91,18,3077,17),'Funktion or Process').
'symbol'('n7','n','src_span'(91,19,91,20,3095,1),'Ident (Prolog Variable)').
'symbol'('SendCoords','SendCoords','src_span'(97,1,97,11,3295,10),'Funktion or Process').
'symbol'('j','j','src_span'(97,12,97,13,3306,1),'Ident (Prolog Variable)').
'symbol'('n8','n','src_span'(97,14,97,15,3308,1),'Ident (Prolog Variable)').
'symbol'('k84','k','src_span'(99,31,99,32,3429,1),'Ident (Prolog Variable)').
'symbol'('k85','k','src_span'(100,34,100,35,3513,1),'Ident (Prolog Variable)').
'symbol'('k86','k','src_span'(102,27,102,28,3610,1),'Ident (Prolog Variable)').
'symbol'('RunAsCoord','RunAsCoord','src_span'(106,1,106,11,3710,10),'Funktion or Process').
'symbol'('n9','n','src_span'(106,12,106,13,3721,1),'Ident (Prolog Variable)').
'symbol'('k88','k','src_span'(107,27,107,28,3776,1),'Ident (Prolog Variable)').
'symbol'('k89','k','src_span'(108,34,108,35,3849,1),'Ident (Prolog Variable)').
'symbol'('k90','k','src_span'(109,31,109,32,3909,1),'Ident (Prolog Variable)').
'symbol'('Running','Running','src_span'(115,1,115,8,4083,7),'Funktion or Process').
'symbol'('n91','n','src_span'(115,9,115,10,4091,1),'Ident (Prolog Variable)').
'symbol'('k92','k','src_span'(115,11,115,12,4093,1),'Ident (Prolog Variable)').
'symbol'('k93','k','src_span'(117,34,117,35,4201,1),'Ident (Prolog Variable)').
'symbol'('j2','j','src_span'(118,29,118,30,4259,1),'Ident (Prolog Variable)').
'symbol'('k95','k','src_span'(120,31,120,32,4353,1),'Ident (Prolog Variable)').
'symbol'('j3','j','src_span'(121,27,121,28,4426,1),'Ident (Prolog Variable)').
'symbol'('Testing','Testing','src_span'(128,1,128,8,4677,7),'Funktion or Process').
'symbol'('n97','n','src_span'(128,9,128,10,4685,1),'Ident (Prolog Variable)').
'symbol'('k98','k','src_span'(128,11,128,12,4687,1),'Ident (Prolog Variable)').
'symbol'('j4','j','src_span'(130,29,130,30,4796,1),'Ident (Prolog Variable)').
'symbol'('k100','k','src_span'(131,34,131,35,4859,1),'Ident (Prolog Variable)').
'symbol'('k101','k','src_span'(132,31,132,32,4919,1),'Ident (Prolog Variable)').
'symbol'('j5','j','src_span'(134,27,134,28,5033,1),'Ident (Prolog Variable)').
'symbol'('Running\x27\','Running\x27\','src_span'(141,1,141,9,5289,8),'Funktion or Process').
'symbol'('n103','n','src_span'(141,10,141,11,5298,1),'Ident (Prolog Variable)').
'symbol'('k104','k','src_span'(141,12,141,13,5300,1),'Ident (Prolog Variable)').
'symbol'('k105','k','src_span'(142,34,142,35,5361,1),'Ident (Prolog Variable)').
'symbol'('j6','j','src_span'(143,29,143,30,5419,1),'Ident (Prolog Variable)').
'symbol'('k107','k','src_span'(144,31,144,32,5480,1),'Ident (Prolog Variable)').
'symbol'('j7','j','src_span'(147,27,147,28,5629,1),'Ident (Prolog Variable)').
'symbol'('j8','j','src_span'(148,25,148,26,5684,1),'Ident (Prolog Variable)').
'symbol'('Failed','Failed','src_span'(152,1,152,7,5765,6),'Funktion or Process').
'symbol'('n110','n','src_span'(152,8,152,9,5772,1),'Ident (Prolog Variable)').
'symbol'('k111','k','src_span'(153,28,153,29,5823,1),'Ident (Prolog Variable)').
'symbol'('k112','k','src_span'(154,25,154,26,5873,1),'Ident (Prolog Variable)').
'symbol'('k113','k','src_span'(155,21,155,22,5919,1),'Ident (Prolog Variable)').
'symbol'('k114','k','src_span'(156,19,156,20,5964,1),'Ident (Prolog Variable)').
'symbol'('k115','k','src_span'(157,23,157,24,6013,1),'Ident (Prolog Variable)').
'symbol'('Failed\x27\','Failed\x27\','src_span'(162,1,162,8,6131,7),'Funktion or Process').
'symbol'('n116','n','src_span'(162,9,162,10,6139,1),'Ident (Prolog Variable)').
'symbol'('k117','k','src_span'(163,28,163,29,6190,1),'Ident (Prolog Variable)').
'symbol'('k118','k','src_span'(164,25,164,26,6241,1),'Ident (Prolog Variable)').
'symbol'('k119','k','src_span'(165,21,165,22,6288,1),'Ident (Prolog Variable)').
'symbol'('k120','k','src_span'(166,19,166,20,6334,1),'Ident (Prolog Variable)').
'symbol'('k121','k','src_span'(167,23,167,24,6384,1),'Ident (Prolog Variable)').
'symbol'('normal','normal','src_span'(176,13,176,19,6694,6),'Transparent function').
'symbol'('Alpha','Alpha','src_span'(178,1,178,6,6702,5),'Funktion or Process').
'symbol'('n122','n','src_span'(178,7,178,8,6708,1),'Ident (Prolog Variable)').
'symbol'('union','union','src_span'(178,12,178,17,6713,5),'BuiltIn primitive').
'symbol'('k123','k','src_span'(181,35,181,36,6898,1),'Ident (Prolog Variable)').
'symbol'('Node','Node','src_span'(183,1,183,5,6912,4),'Funktion or Process').
'symbol'('n124','n','src_span'(183,6,183,7,6917,1),'Ident (Prolog Variable)').
'symbol'('Network','Network','src_span'(185,1,185,8,6980,7),'Ident (Groundrep.)').
'symbol'('n125','n','src_span'(185,14,185,15,6993,1),'Ident (Prolog Variable)').
'symbol'('Delayable','Delayable','src_span'(193,1,193,10,7345,9),'Ident (Groundrep.)').
'symbol'('Urgent','Urgent','src_span'(194,1,194,7,7388,6),'Ident (Groundrep.)').
'symbol'('diff','diff','src_span'(194,10,194,14,7397,4),'BuiltIn primitive').
'symbol'('union','union','src_span'(194,22,194,27,7409,5),'BuiltIn primitive').
'symbol'('TOCKS','TOCKS','src_span'(206,1,206,6,7849,5),'Ident (Groundrep.)').
'symbol'('max','max','src_span'(211,1,211,4,8012,3),'Funktion or Process').
'symbol'('S','S','src_span'(211,5,211,6,8016,1),'Ident (Prolog Variable)').
'symbol'('pick','pick','src_span'(211,14,211,18,8025,4),'Funktion or Process').
'symbol'('x','x','src_span'(211,20,211,21,8031,1),'Ident (Prolog Variable)').
'symbol'('x2','x','src_span'(212,20,212,21,8065,1),'Ident (Prolog Variable)').
'symbol'('y','y','src_span'(212,33,212,34,8078,1),'Ident (Prolog Variable)').
'symbol'('AGREEBY','AGREEBY','src_span'(222,1,222,8,8454,7),'Funktion or Process').
'symbol'('alive','alive','src_span'(222,11,222,16,8464,5),'Ident (Prolog Variable)').
'symbol'('m','m','src_span'(222,41,222,42,8494,1),'Ident (Prolog Variable)').
'symbol'('k133','k','src_span'(224,14,224,15,8586,1),'Ident (Prolog Variable)').
'symbol'('k134','k','src_span'(225,16,225,17,8632,1),'Ident (Prolog Variable)').
'symbol'('n135','n','src_span'(226,21,226,22,8686,1),'Ident (Prolog Variable)').
'symbol'('k136','k','src_span'(226,23,226,24,8688,1),'Ident (Prolog Variable)').
'symbol'('n137','n','src_span'(231,9,231,10,8804,1),'Ident (Prolog Variable)').
'symbol'('alive2','alive','src_span'(231,11,231,16,8806,5),'Ident (Prolog Variable)').
'symbol'('m2','m','src_span'(231,28,231,29,8823,1),'Ident (Prolog Variable)').
'symbol'('k140','k','src_span'(231,30,231,31,8825,1),'Ident (Prolog Variable)').
'symbol'('k141','k','src_span'(233,14,233,15,8903,1),'Ident (Prolog Variable)').
'symbol'('k142','k','src_span'(234,16,234,17,8949,1),'Ident (Prolog Variable)').
'symbol'('m3','m','src_span'(235,21,235,22,9003,1),'Ident (Prolog Variable)').
'symbol'('k144','k','src_span'(235,23,235,24,9005,1),'Ident (Prolog Variable)').
'symbol'('AGREEBY\x27\','AGREEBY\x27\','src_span'(240,1,240,9,9115,8),'Funktion or Process').
'symbol'('alive3','alive','src_span'(240,10,240,15,9124,5),'Ident (Prolog Variable)').
'symbol'('m4','m','src_span'(240,37,240,38,9151,1),'Ident (Prolog Variable)').
'symbol'('k147','k','src_span'(240,39,240,40,9153,1),'Ident (Prolog Variable)').
'symbol'('k148','k','src_span'(242,21,242,22,9234,1),'Ident (Prolog Variable)').
'symbol'('k149','k','src_span'(243,23,243,24,9287,1),'Ident (Prolog Variable)').
'symbol'('n150','n','src_span'(244,21,244,22,9341,1),'Ident (Prolog Variable)').
'symbol'('k151','k','src_span'(244,23,244,24,9343,1),'Ident (Prolog Variable)').
'symbol'('AlphaAgree','AlphaAgree','src_span'(247,1,247,11,9368,10),'Ident (Groundrep.)').
'symbol'('INLEADER','INLEADER','src_span'(258,1,258,9,9695,8),'Funktion or Process').
'symbol'('alive4','alive','src_span'(258,12,258,17,9706,5),'Ident (Prolog Variable)').
'symbol'('m5','m','src_span'(259,18,259,19,9747,1),'Ident (Groundrep.)').
'symbol'('j9','j','src_span'(260,33,260,34,9831,1),'Ident (Prolog Variable)').
'symbol'('k155','k','src_span'(260,51,260,52,9849,1),'Ident (Prolog Variable)').
'symbol'('k156','k','src_span'(262,14,262,15,9928,1),'Ident (Prolog Variable)').
'symbol'('k157','k','src_span'(263,16,263,17,9975,1),'Ident (Prolog Variable)').
'symbol'('m6','m','src_span'(264,21,264,22,10030,1),'Ident (Prolog Variable)').
'symbol'('k159','k','src_span'(264,23,264,24,10032,1),'Ident (Prolog Variable)').
'symbol'('n160','n','src_span'(266,10,266,11,10065,1),'Ident (Prolog Variable)').
'symbol'('alive5','alive','src_span'(266,12,266,17,10067,5),'Ident (Prolog Variable)').
'symbol'('m7','m','src_span'(266,38,266,39,10093,1),'Ident (Prolog Variable)').
'symbol'('k163','k','src_span'(266,40,266,41,10095,1),'Ident (Prolog Variable)').
'symbol'('k164','k','src_span'(268,14,268,15,10175,1),'Ident (Prolog Variable)').
'symbol'('k165','k','src_span'(269,16,269,17,10222,1),'Ident (Prolog Variable)').
'symbol'('m8','m','src_span'(270,21,270,22,10277,1),'Ident (Prolog Variable)').
'symbol'('k167','k','src_span'(270,23,270,24,10279,1),'Ident (Prolog Variable)').
'symbol'('INLEADER\x27\','INLEADER\x27\','src_span'(272,1,272,10,10303,9),'Funktion or Process').
'symbol'('alive6','alive','src_span'(272,11,272,16,10313,5),'Ident (Prolog Variable)').
'symbol'('m9','m','src_span'(272,37,272,38,10339,1),'Ident (Prolog Variable)').
'symbol'('k170','k','src_span'(272,39,272,40,10341,1),'Ident (Prolog Variable)').
'symbol'('k171','k','src_span'(274,14,274,15,10417,1),'Ident (Prolog Variable)').
'symbol'('k172','k','src_span'(275,16,275,17,10464,1),'Ident (Prolog Variable)').
'symbol'('m173','m','src_span'(276,21,276,22,10519,1),'Ident (Prolog Variable)').
'symbol'('k174','k','src_span'(276,23,276,24,10521,1),'Ident (Prolog Variable)').
'symbol'('FailINLEADER','FailINLEADER','src_span'(291,1,291,13,11254,12),'Ident (Groundrep.)').
'symbol'('SOMELEADER','SOMELEADER','src_span'(300,1,300,11,11627,10),'Funktion or Process').
'symbol'('alive7','alive','src_span'(300,14,300,19,11640,5),'Ident (Prolog Variable)').
'symbol'('i','i','src_span'(301,16,301,17,11665,1),'Ident (Prolog Variable)').
'symbol'('j177','j','src_span'(301,31,301,32,11680,1),'Ident (Prolog Variable)').
'symbol'('k178','k','src_span'(303,14,303,15,11782,1),'Ident (Prolog Variable)').
'symbol'('k179','k','src_span'(304,16,304,17,11831,1),'Ident (Prolog Variable)').
'symbol'('m180','m','src_span'(305,21,305,22,11888,1),'Ident (Prolog Variable)').
'symbol'('k181','k','src_span'(305,23,305,24,11890,1),'Ident (Prolog Variable)').
'symbol'('n182','n','src_span'(307,12,307,13,11927,1),'Ident (Prolog Variable)').
'symbol'('alive8','alive','src_span'(307,14,307,19,11929,5),'Ident (Prolog Variable)').
'symbol'('m184','m','src_span'(307,40,307,41,11955,1),'Ident (Prolog Variable)').
'symbol'('k185','k','src_span'(307,42,307,43,11957,1),'Ident (Prolog Variable)').
'symbol'('k186','k','src_span'(309,14,309,15,12041,1),'Ident (Prolog Variable)').
'symbol'('k187','k','src_span'(310,16,310,17,12090,1),'Ident (Prolog Variable)').
'symbol'('m188','m','src_span'(311,21,311,22,12147,1),'Ident (Prolog Variable)').
'symbol'('k189','k','src_span'(311,23,311,24,12149,1),'Ident (Prolog Variable)').
'symbol'('SOMELEADER\x27\','SOMELEADER\x27\','src_span'(313,1,313,12,12175,11),'Funktion or Process').
'symbol'('alive9','alive','src_span'(313,13,313,18,12187,5),'Ident (Prolog Variable)').
'symbol'('m191','m','src_span'(313,39,313,40,12213,1),'Ident (Prolog Variable)').
'symbol'('k192','k','src_span'(313,41,313,42,12215,1),'Ident (Prolog Variable)').
'symbol'('k193','k','src_span'(315,14,315,15,12295,1),'Ident (Prolog Variable)').
'symbol'('k194','k','src_span'(316,16,316,17,12344,1),'Ident (Prolog Variable)').
'symbol'('m195','m','src_span'(317,21,317,22,12401,1),'Ident (Prolog Variable)').
'symbol'('k196','k','src_span'(317,23,317,24,12403,1),'Ident (Prolog Variable)').
'symbol'('FailSOMELEADER','FailSOMELEADER','src_span'(322,1,322,15,12567,14),'Ident (Groundrep.)').